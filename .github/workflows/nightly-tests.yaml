name: Nightly

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # necessary to pass upgrade tests

on:
  # https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07
  # Minute [0,59]
  # Hour [0,23]
  # Day of the month [1,31]
  # Month of the year [1,12]
  # Day of the week ([0,6] with 0=Sunday)
  schedule:
    - cron: "0 5 * * *" # every day @ 05:00 UTC, run tests against latest main
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch to run tests against"
        type: choice
        options:
          - main
          - workflow_initiating_branch
      run-conformance:
        description: "Run conformance tests"
        type: boolean
        default: false
      run-load-tests:
        description: "Run load testing suite"
        type: boolean
        default: false
      run-e2e-tests:
        description: "Run e2e tests"
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

# TODO(tim): Add back in main branch tests once they're green.
# TODO(tim): Evaluate whether we want to publish nightly results to Slack.
jobs:
  kube_gateway_api_conformance_tests_main:
    name: Conformance (branch=main, type=Kubernetes Gateway API, version=${{matrix.kube-version.node}} )
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.run-conformance && inputs.branch == 'main') || github.event.schedule == '0 5 * * *' }}
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        kube-version: [ { node: 'v1.30.13@sha256:397209b3d947d154f6641f2d0ce8d473732bd91c87d9575ade99049aa33cd648', kubectl: 'v1.30.14', kind: 'v0.29.0' },
                        { node: 'v1.34.0@sha256:7416a61b42b1662ca6ca89f02028ac133a309a2a30ba309614e8ec94d976dc5a', kubectl: 'v1.34.1', kind: 'v0.30.0' }]
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main
    - uses: ./.github/actions/kube-gateway-api-conformance-tests

  kube_gateway_api_load_tests:
    name: Load Tests (branch=main, type=Kubernetes Gateway API, version=${{matrix.kube-version.node}} )
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.run-load-tests && inputs.branch == 'main') || github.event.schedule == '0 5 * * *' }}
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        kube-version: [ { node: 'v1.30.13@sha256:397209b3d947d154f6641f2d0ce8d473732bd91c87d9575ade99049aa33cd648', kubectl: 'v1.30.14', kind: 'v0.29.0' },
                        { node: 'v1.34.0@sha256:7416a61b42b1662ca6ca89f02028ac133a309a2a30ba309614e8ec94d976dc5a', kubectl: 'v1.34.1', kind: 'v0.30.0' }]
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main
    - uses: ./.github/actions/kube-gateway-api-load-tests

  e2e_tests_for_gateway_api_versions:
    name: E2E Tests for Gateway API Versions
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.run-e2e-tests)}}
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        gateway-api-version: [ { version: 'v1.4.0', channel: 'experimental' },
                              { version: 'v1.4.0', channel: 'standard' },
                              { version: 'v1.3.0', channel: 'experimental' },
                              { version: 'v1.3.0', channel: 'standard' },
                              { version: 'v1.2.0', channel: 'experimental' },
                              { version: 'v1.2.0', channel: 'standard' }]
    steps:
    - uses: actions/checkout@v4
    - name: Prep Go Runner
      uses: ./.github/actions/prep-go-runner
    - name: Dotenv Action
      uses: falti/dotenv-action@v1.1.4
      id: dotenv
      with:
        path: "./.github/workflows/.env/nightly-tests/max_versions.env"
        log-variables: true
    - name: Setup KinD Cluster
      uses: ./.github/actions/setup-kind-cluster
      with:
        kgateway-api-version: ${{ matrix.gateway-api-version.version }}
        kgateway-api-channel: ${{ matrix.gateway-api-version.channel }}
        cluster-name: "egw-api-e2e-${{ matrix.gateway-api-version.version }}-${{ matrix.gateway-api-version.channel }}"
        kind-version: ${{ matrix.gateway-api-version.kind }}
        kubectl-version: ${{ steps.dotenv.outputs.kubectl_version }}
        istio-version: ${{ steps.dotenv.outputs.istio_version }}
        agentgateway: "true"

    - id: run-tests
      uses: ./.github/actions/kubernetes-e2e-tests
      with:
        cluster-name: "egw-api-e2e-${{ matrix.gateway-api-version.version }}-${{ matrix.gateway-api-version.channel }}"
        test-args: '-v -timeout=180m'
        run-regex: "|" #'^TestKgatewayMetrics$$|^TestControlPlaneTLS$$|^TestKgateway$$/^HeaderModifiers$$|^TestListenerSet$$|^TestKgateway$$/^BasicRouting$$'
        istio-version: ${{ steps.dotenv.outputs.istio_version }}
        matrix-label: "nightly-gw-api-${{ matrix.gateway-api-version.version }}-${{ matrix.gateway-api-version.channel }}"
