// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// HealthCheckApplyConfiguration represents a declarative configuration of the HealthCheck type for use
// with apply.
type HealthCheckApplyConfiguration struct {
	Timeout            *v1.Duration                       `json:"timeout,omitempty"`
	Interval           *v1.Duration                       `json:"interval,omitempty"`
	UnhealthyThreshold *uint32                            `json:"unhealthyThreshold,omitempty"`
	HealthyThreshold   *uint32                            `json:"healthyThreshold,omitempty"`
	Http               *HealthCheckHttpApplyConfiguration `json:"http,omitempty"`
	Grpc               *HealthCheckGrpcApplyConfiguration `json:"grpc,omitempty"`
}

// HealthCheckApplyConfiguration constructs a declarative configuration of the HealthCheck type for use with
// apply.
func HealthCheck() *HealthCheckApplyConfiguration {
	return &HealthCheckApplyConfiguration{}
}

// WithTimeout sets the Timeout field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Timeout field is set to the value of the last call.
func (b *HealthCheckApplyConfiguration) WithTimeout(value v1.Duration) *HealthCheckApplyConfiguration {
	b.Timeout = &value
	return b
}

// WithInterval sets the Interval field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Interval field is set to the value of the last call.
func (b *HealthCheckApplyConfiguration) WithInterval(value v1.Duration) *HealthCheckApplyConfiguration {
	b.Interval = &value
	return b
}

// WithUnhealthyThreshold sets the UnhealthyThreshold field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UnhealthyThreshold field is set to the value of the last call.
func (b *HealthCheckApplyConfiguration) WithUnhealthyThreshold(value uint32) *HealthCheckApplyConfiguration {
	b.UnhealthyThreshold = &value
	return b
}

// WithHealthyThreshold sets the HealthyThreshold field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HealthyThreshold field is set to the value of the last call.
func (b *HealthCheckApplyConfiguration) WithHealthyThreshold(value uint32) *HealthCheckApplyConfiguration {
	b.HealthyThreshold = &value
	return b
}

// WithHttp sets the Http field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Http field is set to the value of the last call.
func (b *HealthCheckApplyConfiguration) WithHttp(value *HealthCheckHttpApplyConfiguration) *HealthCheckApplyConfiguration {
	b.Http = value
	return b
}

// WithGrpc sets the Grpc field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Grpc field is set to the value of the last call.
func (b *HealthCheckApplyConfiguration) WithGrpc(value *HealthCheckGrpcApplyConfiguration) *HealthCheckApplyConfiguration {
	b.Grpc = value
	return b
}
