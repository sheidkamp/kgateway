Clusters:
- connectTimeout: 5s
  dnsLookupFamily: V4_PREFERRED
  loadAssignment:
    clusterName: backend_default_lambda-backend_0
    endpoints:
    - lbEndpoints:
      - endpoint:
          address:
            socketAddress:
              address: 172.18.0.2
              portValue: 31566
  metadata: {}
  name: backend_default_lambda-backend_0
  type: LOGICAL_DNS
  typedExtensionProtocolOptions:
    envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
      '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
      commonHttpProtocolOptions:
        idleTimeout: 30s
      explicitHttpConfig:
        http2ProtocolOptions: {}
      httpFilters:
      - name: envoy.filters.http.aws_lambda
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.filters.http.aws_lambda.v3.Config
          arn: arn:aws:lambda:us-east-1:000000000000:function:hello-function:$LATEST
      - name: envoy.filters.http.aws_request_signing
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.filters.http.aws_request_signing.v3.AwsRequestSigning
          credentialProvider:
            inlineCredential:
              accessKeyId: AKIAIOSFODNN7EXAMPLE
              secretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
          region: us-east-1
          serviceName: lambda
      - name: envoy.filters.http.upstream_codec
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.filters.http.upstream_codec.v3.UpstreamCodec
- connectTimeout: 5s
  dnsLookupFamily: V4_PREFERRED
  loadAssignment:
    clusterName: backend_default_lambda-without-payload-transform_0
    endpoints:
    - lbEndpoints:
      - endpoint:
          address:
            socketAddress:
              address: 172.18.0.2
              portValue: 31566
  metadata: {}
  name: backend_default_lambda-without-payload-transform_0
  type: LOGICAL_DNS
  typedExtensionProtocolOptions:
    envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
      '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
      commonHttpProtocolOptions:
        idleTimeout: 30s
      explicitHttpConfig:
        http2ProtocolOptions: {}
      httpFilters:
      - name: envoy.filters.http.aws_lambda
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.filters.http.aws_lambda.v3.Config
          arn: arn:aws:lambda:us-east-1:000000000000:function:hello-function:$LATEST
          payloadPassthrough: true
      - name: envoy.filters.http.aws_request_signing
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.filters.http.aws_request_signing.v3.AwsRequestSigning
          credentialProvider:
            inlineCredential:
              accessKeyId: AKIAIOSFODNN7EXAMPLE
              secretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
          region: us-east-1
          serviceName: lambda
      - name: envoy.filters.http.upstream_codec
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.filters.http.upstream_codec.v3.UpstreamCodec
- connectTimeout: 5s
  metadata: {}
  name: test-backend-plugin_default_example-svc_80
Listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 80
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~80
        statPrefix: http
        useRemoteAddress: true
    name: listener~80
  name: listener~80
Routes:
- ignorePortInHostMatching: true
  name: listener~80
  virtualHosts:
  - domains:
    - www.example.com
    name: listener~80~www_example_com
    routes:
    - match:
        path: /lambda/no-payload-transform
      name: listener~80~www_example_com-route-0-httproute-lambda-route-default-1-0-matcher-0
      route:
        cluster: backend_default_lambda-without-payload-transform_0
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        ai.extproc.kgateway.io:
          '@type': type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExtProcPerRoute
          disabled: true
    - match:
        path: /lambda
      name: listener~80~www_example_com-route-1-httproute-lambda-route-default-0-0-matcher-0
      route:
        cluster: backend_default_lambda-backend_0
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        ai.extproc.kgateway.io:
          '@type': type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExtProcPerRoute
          disabled: true
Statuses:
  gateways:
    default/example-gateway:
      conditions:
      - lastTransitionTime: null
        message: ""
        reason: ListenerSetsNotAllowed
        status: Unknown
        type: AttachedListenerSets
      - lastTransitionTime: null
        message: Successfully accepted Gateway
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Successfully programmed Gateway
        reason: Programmed
        status: "True"
        type: Programmed
      listeners:
      - attachedRoutes: 1
        conditions:
        - lastTransitionTime: null
          message: Successfully accepted Listener
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Successfully verified that Listener has no conflicts
          reason: NoConflicts
          status: "False"
          type: Conflicted
        - lastTransitionTime: null
          message: Successfully resolved all references
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        - lastTransitionTime: null
          message: Successfully programmed Listener
          reason: Programmed
          status: "True"
          type: Programmed
        name: http
        supportedKinds:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
        - group: gateway.networking.k8s.io
          kind: GRPCRoute
  httpRoutes:
    default/lambda-route:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Successfully accepted Route
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Successfully resolved all references
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: ""
          kind: ""
          name: example-gateway
