Clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_gwtest_example-svc_80
  type: EDS
- connectTimeout: 5s
  metadata: {}
  name: test-backend-plugin_default_example-svc_80
Listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 8080
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - disabled: true
          name: transformation
          typedConfig:
            '@type': type.googleapis.com/envoy.api.v2.filter.http.FilterTransformations
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~8080
        statPrefix: http
        useRemoteAddress: true
    name: listener~8080
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        transformation:
        - gateway.kgateway.dev/TrafficPolicy/gwtest/gateway-wide-invalid-policy
  name: listener~8080
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 8443
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - disabled: true
          name: transformation
          typedConfig:
            '@type': type.googleapis.com/envoy.api.v2.filter.http.FilterTransformations
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: https
        statPrefix: http
        useRemoteAddress: true
    name: https
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        transformation:
        - gateway.kgateway.dev/TrafficPolicy/gwtest/gateway-wide-invalid-policy
  name: listener~8443
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 9090
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - disabled: true
          name: transformation
          typedConfig:
            '@type': type.googleapis.com/envoy.api.v2.filter.http.FilterTransformations
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~9090
        statPrefix: http
        useRemoteAddress: true
    name: listener~9090
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        transformation:
        - gateway.kgateway.dev/TrafficPolicy/gwtest/gateway-wide-invalid-policy
  name: listener~9090
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 9443
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: gwtest/test-listenerset/https-additional
        statPrefix: http
        useRemoteAddress: true
    name: gwtest/test-listenerset/https-additional
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        transformation:
        - gateway.kgateway.dev/TrafficPolicy/gwtest/gateway-wide-invalid-policy
  name: listener~9443
Routes:
- ignorePortInHostMatching: true
  name: gwtest/test-listenerset/https-additional
  virtualHosts:
  - domains:
    - '*'
    name: default
    routes:
    - directResponse:
        body:
          inlineString: invalid route configuration detected and replaced with a direct
            response.
        status: 500
      match:
        prefix: /
- ignorePortInHostMatching: true
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        transformation:
        - gateway.kgateway.dev/TrafficPolicy/gwtest/gateway-wide-invalid-policy
  name: https
  typedPerFilterConfig:
    transformation:
      '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
      transformations:
      - requestMatch:
          requestTransformation:
            transformationTemplate:
              body:
                text: '{{ invalid_gateway_template }'
  virtualHosts:
  - domains:
    - www.example.com
    name: https~www_example_com
    routes:
    - match:
        pathSeparatedPrefix: /gateway
      name: https~www_example_com-route-0-httproute-test-route-gateway-gwtest-0-0-matcher-0
      route:
        cluster: kube_gwtest_example-svc_80
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
- ignorePortInHostMatching: true
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        transformation:
        - gateway.kgateway.dev/TrafficPolicy/gwtest/gateway-wide-invalid-policy
  name: listener~8080
  typedPerFilterConfig:
    transformation:
      '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
      transformations:
      - requestMatch:
          requestTransformation:
            transformationTemplate:
              body:
                text: '{{ invalid_gateway_template }'
  virtualHosts:
  - domains:
    - www.example.com
    name: listener~8080~www_example_com
    routes:
    - match:
        pathSeparatedPrefix: /gateway
      name: listener~8080~www_example_com-route-0-httproute-test-route-gateway-gwtest-0-0-matcher-0
      route:
        cluster: kube_gwtest_example-svc_80
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
- ignorePortInHostMatching: true
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        transformation:
        - gateway.kgateway.dev/TrafficPolicy/gwtest/gateway-wide-invalid-policy
  name: listener~9090
  typedPerFilterConfig:
    transformation:
      '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
      transformations:
      - requestMatch:
          requestTransformation:
            transformationTemplate:
              body:
                text: '{{ invalid_gateway_template }'
  virtualHosts:
  - domains:
    - www.example.com
    name: listener~9090~www_example_com
    routes:
    - directResponse:
        body:
          inlineString: invalid route configuration detected and replaced with a direct
            response.
        status: 500
      match:
        prefix: /
Statuses:
  gateways:
    gwtest/example-gateway:
      conditions:
      - lastTransitionTime: null
        message: ""
        reason: ListenerSetsAttached
        status: "True"
        type: AttachedListenerSets
      - lastTransitionTime: null
        message: Successfully accepted Gateway
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Successfully programmed Gateway
        reason: Programmed
        status: "True"
        type: Programmed
      listeners:
      - attachedRoutes: 1
        conditions:
        - lastTransitionTime: null
          message: Successfully accepted Listener
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Successfully verified that Listener has no conflicts
          reason: NoConflicts
          status: "False"
          type: Conflicted
        - lastTransitionTime: null
          message: Successfully resolved all references
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        - lastTransitionTime: null
          message: Successfully programmed Listener
          reason: Programmed
          status: "True"
          type: Programmed
        name: http
        supportedKinds:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
        - group: gateway.networking.k8s.io
          kind: GRPCRoute
      - attachedRoutes: 1
        conditions:
        - lastTransitionTime: null
          message: Successfully accepted Listener
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Successfully verified that Listener has no conflicts
          reason: NoConflicts
          status: "False"
          type: Conflicted
        - lastTransitionTime: null
          message: Successfully resolved all references
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        - lastTransitionTime: null
          message: Successfully programmed Listener
          reason: Programmed
          status: "True"
          type: Programmed
        name: https
        supportedKinds:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
  httpRoutes:
    gwtest/test-route-gateway:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Successfully accepted Route
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Successfully resolved all references
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
    gwtest/test-route-xlistenerset:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Successfully accepted Route
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Successfully resolved all references
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: gateway.networking.x-k8s.io
          kind: XListenerSet
          name: test-listenerset
  listenerSets:
    gwtest/test-listenerset:
      conditions:
      - lastTransitionTime: null
        message: Successfully accepted ListenerSet
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Successfully programmed ListenerSet
        reason: Programmed
        status: "True"
        type: Programmed
      listeners:
      - attachedRoutes: 1
        conditions:
        - lastTransitionTime: null
          message: 'ai: field invalid_object contains invalid JSON string: "model":"gpt-4"}'
          reason: ListenerReplaced
          status: "False"
          type: Accepted
        - lastTransitionTime: null
          message: Successfully verified that Listener has no conflicts
          reason: NoConflicts
          status: "False"
          type: Conflicted
        - lastTransitionTime: null
          message: Successfully resolved all references
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        - lastTransitionTime: null
          message: Successfully programmed Listener
          reason: Programmed
          status: "True"
          type: Programmed
        name: http-additional
        port: 9090
        supportedKinds:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
        - group: gateway.networking.k8s.io
          kind: GRPCRoute
      - attachedRoutes: 1
        conditions:
        - lastTransitionTime: null
          message: 'ai: field invalid_object contains invalid JSON string: "model":"gpt-4"}'
          reason: ListenerReplaced
          status: "False"
          type: Accepted
        - lastTransitionTime: null
          message: Successfully verified that Listener has no conflicts
          reason: NoConflicts
          status: "False"
          type: Conflicted
        - lastTransitionTime: null
          message: Successfully resolved all references
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        - lastTransitionTime: null
          message: Successfully programmed Listener
          reason: Programmed
          status: "True"
          type: Programmed
        name: https-additional
        port: 9443
        supportedKinds:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
  policies:
    TrafficPolicy/gwtest/gateway-wide-invalid-policy:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: gwtest
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Attached to all targets
          reason: Attached
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
      - ancestorRef:
          group: gateway.networking.x-k8s.io
          kind: XListenerSet
          name: test-listenerset
          namespace: gwtest
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Attached to all targets
          reason: Attached
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/gwtest/xlistenerset-wide-invalid-policy:
      ancestors:
      - ancestorRef:
          group: gateway.networking.x-k8s.io
          kind: XListenerSet
          name: test-listenerset
          namespace: gwtest
        conditions:
        - lastTransitionTime: null
          message: 'ai: field invalid_object contains invalid JSON string: "model":"gpt-4"}'
          reason: Invalid
          status: "False"
          type: Accepted
        - lastTransitionTime: null
          message: ""
          reason: Pending
          status: "False"
          type: Attached
        controllerName: kgateway.dev/kgateway
